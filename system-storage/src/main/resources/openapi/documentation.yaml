openapi: 3.0.0
info:
  title: system-storage private API
  version: 1.0.0
  description: |
    This Swagger documentation file outlines the API specifications for a User Tracker application built with Ktor and MongoDB. The API allows users to manage user records including creating new records, updating and deleting records by login. The API uses the User data classes to structure the user-related information. This API is secured using JWT.

paths:
  /login:
    post:
      summary: Authenticate user and generate JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          description: Token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials

  /user:
    post:
      summary: Create a new user record
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request
  /user/{login}:
    get:
      summary: Retrieve user record by login
      security:
        - bearerAuth: [ ]
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example: {}
        '404':
          description: User not found
    delete:
      summary: Delete user record by login
      security:
        - bearerAuth: [ ]
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '400':
          description: Bad request
        '404':
          description: User not found
    patch:
      summary: Update user record by login
      security:
        - bearerAuth: [ ]
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: User updated successfully
        '400':
          description: Bad request
        '404':
          description: User not found

  /image:
    post:
      summary: Create a new image record
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRequest'
      responses:
        '201':
          description: Image created successfully
        '400':
          description: Bad request
  /image/{name}:
    get:
      summary: Retrieve image record by name
      security:
        - bearerAuth: [ ]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example: { }
        '404':
          description: Image not found
    delete:
      summary: Delete image record by name
      security:
        - bearerAuth: [ ]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Image deleted successfully
        '400':
          description: Bad request
        '404':
          description: Image not found
    patch:
      summary: Update image record by name
      security:
        - bearerAuth: [ ]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRequest'
      responses:
        '200':
          description: Image updated successfully
        '400':
          description: Bad request
        '404':
          description: Image not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        login:
          type: string
        password:
          type: string
        code:
          type: string
      required:
        - name
        - login
        - password
        - code

    UserRequest:
      type: object
      properties:
        name:
          type: string
        login:
          type: string
        password:
          type: string
        code:
          type: string
      required:
        - name
        - login
        - password
        - code
    Image:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        data:
          type: string
          format: byte
        date:
          type: integer
          format: int64
        fetchAmount:
          type: integer
      required:
        - name
        - login
        - password
        - code
    ImageRequest:
      type: object
      properties:
        name:
          type: string
        data:
          type: string
          format: byte
      required:
        - name
        - data
    Credentials:
      type: object
      properties:
        username:
          type: string
          default: "system-storage-user"
        password:
          type: string
          default: "system-storage-password"
      required:
        - username
        - password